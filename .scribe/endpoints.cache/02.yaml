## Autogenerated by Scribe. DO NOT MODIFY.

name: Comments
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/posts/{post_id}/comments'
    metadata:
      groupName: Comments
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      post_id:
        name: post_id
        description: 'The ID of the post.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      post_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"body":"my comment","replies":[{"id":6,"body":"new reply","created_at":"2025-09-10T11:11:07.000000Z","updated_at":"2025-09-10T11:11:07.000000Z"}],"created_at":"2025-09-10T11:08:56.000000Z","updated_at":"2025-09-10T11:08:56.000000Z"},{"id":2,"body":"my comment 2","replies":[{"id":3,"body":"new reply2","created_at":"2025-09-10T11:10:24.000000Z","updated_at":"2025-09-10T11:25:47.000000Z"},{"id":10,"body":"another reply","created_at":"2025-09-10T14:27:04.000000Z","updated_at":"2025-09-10T14:27:04.000000Z"},{"id":11,"body":"another reply","created_at":"2025-09-10T14:27:16.000000Z","updated_at":"2025-09-10T14:27:16.000000Z"},{"id":12,"body":"another reply","created_at":"2025-09-10T14:27:17.000000Z","updated_at":"2025-09-10T14:27:17.000000Z"},{"id":13,"body":"another reply","created_at":"2025-09-10T14:27:23.000000Z","updated_at":"2025-09-10T14:27:23.000000Z"},{"id":14,"body":"another reply","created_at":"2025-09-10T14:27:24.000000Z","updated_at":"2025-09-10T14:27:24.000000Z"}],"created_at":"2025-09-10T11:09:10.000000Z","updated_at":"2025-09-10T11:09:10.000000Z"},{"id":7,"body":"new reply33","replies":[],"created_at":"2025-09-10T13:47:32.000000Z","updated_at":"2025-09-10T13:47:32.000000Z"}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/comments/{comment_id}'
    metadata:
      groupName: Comments
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      comment_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"body":"my comment","user":{"id":1,"name":"test","created_at":"2025-09-10T10:22:57.000000Z","updated_at":"2025-09-10T10:22:57.000000Z"},"created_at":"2025-09-10T11:08:56.000000Z","updated_at":"2025-09-10T11:08:56.000000Z"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/comments/{comment_id}/replies'
    metadata:
      groupName: Comments
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      comment_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":6,"body":"new reply","user":{"id":1,"name":"test","created_at":"2025-09-10T10:22:57.000000Z","updated_at":"2025-09-10T10:22:57.000000Z"},"created_at":"2025-09-10T11:11:07.000000Z","updated_at":"2025-09-10T11:11:07.000000Z"}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/posts/{post_id}/comments'
    metadata:
      groupName: Comments
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      post_id:
        name: post_id
        description: 'The ID of the post.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      post_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      body:
        name: body
        description: 'Must not be greater than 65535 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      body: b
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/comments/{comment_id}/replies'
    metadata:
      groupName: Comments
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      comment_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      body:
        name: body
        description: 'Must not be greater than 65535 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      body: b
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/comments/{id}'
    metadata:
      groupName: Comments
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      body:
        name: body
        description: 'Must not be greater than 65535 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      body: b
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/comments/{id}'
    metadata:
      groupName: Comments
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
